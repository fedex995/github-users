{"version":3,"sources":["actions/index.js","components/Loader.jsx","components/SearchInput.jsx","containers/SearchContainer.js","components/ReposList.jsx","containers/ReposListContainer.js","components/UserInfoScreen.jsx","components/SearchHistory.jsx","containers/HistoryContainer.js","components/UserSearchScreen.jsx","containers/UserSearchContainer.js","components/Navbar.jsx","containers/UserInfoContainer.js","routes.js","reducers/ui.js","reducers/user.js","reducers/repos.js","reducers/history.js","reducers/index.js","utils/http.js","middlewares/users.js","store.js","index.js","assets/arrow-up-DARK.svg"],"names":["actions","username","type","user","error","reposUrl","repos","Loader","react_default","a","createElement","react_loader_spinner_default","color","height","width","SearchInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onInputChangeRef","onInputChange","bind","assertThisInitialized","onFormSubmitRef","onFormSubmit","state","value","event","setState","target","preventDefault","loadingUser","searchUser","className","onSubmit","onChange","autoFocus","components_Loader","concat","userNotFound","Component","connect","ui","dispatch","withRouter","ReposList","_ref","map","repo","key","id","href","clone_url","name","description","loadingRepos","UserInfoScreen","currentTab","showInfo","_this2","setTimeout","_this3","history","push","onClick","goBack","alt","src","arrow","UserInfoScreen_UserProfile","title","public_repos","public_gists","followers","following","elem","i","UserInfoScreen_UserInfoDetails","ReposListContainer","UserInfoDetails","data","company","blog","location","email","bio","Date","created_at","toDateString","updated_at","element","UserProfile","_ref2","onUserClick","login","avatar_url","html_url","e","stopPropagation","visited","SearchHistory","searches","length","allIds","byId","UserSearchScreen","SearchContainer","HistoryContainer","showUserInfo","Navbar","routes","src_components_Navbar","react_router","exact","path","component","UserSearch","UserInfoContainer","initialState","arguments","undefined","objectSpread","action","toConsumableArray","localStorage","JSON","parse","newState","indexOf","defineProperty","visited_at","now","sort","b","stringify","createBrowserHistory","rootReducer","combineReducers","historyReducer","router","connectRouter","httpClient","axios","create","defaults","timeout","get","url","method","then","res","status","catch","errorResponse","response","_request","usersMiddleware","getState","next","settings","githubURL","console","log","repos_url","err","middleware","routerMiddleware","src_store","store","createStore","reducer","compose","applyMiddleware","thunk","logger","users","ReactDOM","render","es","esm","Routes","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e0872060.chunk.js","sourcesContent":["/*\n    Declare and export redux's actions\n */\n\nexport const GET_USER_REQUEST = 'GET_USER_REQUEST';\nexport const GET_USER_RESPONSE = 'GET_USER_RESPONSE';\nexport const GET_USER_ERROR = 'GET_USER_ERROR';\n\nexport const GET_REPOS_REQUEST = 'GET_REPOS_REQUEST';\nexport const GET_REPOS_RESPONSE = 'GET_REPOS_RESPONSE';\nexport const GET_REPOS_ERROR = 'GET_REPOS_ERROR';\n\nexport default {\n    getUser: (username) => ({type: GET_USER_REQUEST, username}),\n    getUserResponse: (user) => ({type: GET_USER_RESPONSE, user}),\n    getUserError: (error) => ({type: GET_USER_ERROR, error}),\n\n    getReposRequest: (reposUrl) => ({type: GET_REPOS_REQUEST, reposUrl}),\n    getReposResponse: (repos) => ({type: GET_REPOS_RESPONSE, repos}),\n    getReposError: (error) => ({type: GET_REPOS_ERROR, error})\n\n};","import React from \"react\";\nimport SpinnerLoader from 'react-loader-spinner';\n\nconst Loader = () => (\n    <SpinnerLoader type=\"ThreeDots\" color=\"#00aeef\" height=\"44\" width=\"80\"/>\n);\n\nexport default Loader;","import React, {Component} from \"react\";\nimport \"./SearchInput.css\";\nimport Loader from \"./Loader\";\n\nclass SearchInput extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\"\n        }\n    }\n\n    onInputChange(event) {\n        this.setState({value: event.target.value})\n    }\n    onInputChangeRef = this.onInputChange.bind(this);\n\n    onFormSubmit(event) {\n        event.preventDefault();\n        if (!this.props.loadingUser)\n            this.props.searchUser(this.state.value);\n    }\n    onFormSubmitRef = this.onFormSubmit.bind(this);\n\n    render() {\n        return (\n            <form className={\"search-container\"} onSubmit={this.onFormSubmitRef}>\n                <input value={this.state.value} onChange={this.onInputChangeRef} autoFocus={true}/>\n                <label>Type in the user you want to look up</label>\n                {\n                    this.props.loadingUser ?\n                        <Loader/> :\n                        <button className={\"alternative\"} type={\"submit\"}>Search</button>\n                }\n                <label className={`error-label ${this.props.userNotFound && \"show\"}`}>The user doesn't exist!</label>\n            </form>\n        );\n    }\n}\n\nexport default SearchInput;","import { connect } from 'react-redux'\nimport actions from \"../actions\";\nimport {withRouter} from 'react-router'\nimport SearchInput from \"../components/SearchInput\";\n\nconst mapStateToProps = (state) => {\n    return {\n        loadingUser: state.ui.loadingUser,\n        userNotFound: state.ui.userNotFound\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        searchUser: (username) => dispatch(actions.getUser(username))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SearchInput));","import React from \"react\";\nimport \"./ReposList.css\";\n\nconst ReposList = ({repos}) => (\n    <div className={\"repos-container section\"}>\n        {\n            repos.map(repo => (\n                <div className={\"repo row\"} key={repo.id}>\n                    <label><b>ID:</b> {repo.id}</label>\n                    <label><b>Name:</b> <a href={repo.clone_url} target={\"blank\"}>{repo.name}</a></label>\n                    <label><b>Description:</b> {repo.description || \"-\"}</label>\n                    <div className={\"actions\"}>\n                    </div>\n                </div>\n            ))\n        }\n    </div>\n);\n\nexport default ReposList;","import { connect } from 'react-redux'\nimport {withRouter} from 'react-router'\nimport ReposList from \"../components/ReposList\";\n\nconst mapStateToProps = (state) => {\n    return {\n        loadingRepos: state.ui.loadingRepos,\n        repos: state.repos\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ReposList));","import React, {Component} from \"react\";\nimport \"./UserInfoScreen.css\";\nimport ReposListContainer from \"../containers/ReposListContainer\";\nimport arrow from \"../assets/arrow-up-DARK.svg\";\n\nclass UserInfoScreen extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            currentTab: 0,\n            showInfo: false\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.user.id)\n            setTimeout(() => this.setState({showInfo: true}), 300);\n\n    }\n    render() {\n        const user = this.props.user;\n        if(!user.id) this.props.history.push(\"/\");\n\n        return (\n            <div className={`user-info-container ${this.state.showInfo && \"show\"}`}>\n                <div className={\"back-container\"} onClick={() => this.props.history.goBack()}>\n                    <img alt={\"back\"} src={arrow}/>\n                    <label>Go Back</label>\n                </div>\n                <UserProfile user={user}/>\n                <div className={\"row section highlights\"}>\n                    {\n                        [\n                            {title: \"Public repos\", value: user.public_repos},\n                            {title: \"Public gists\", value: user.public_gists},\n                            {title: \"Followers\", value: user.followers},\n                            {title: \"Following\", value: user.following},\n                        ].map(elem => (\n                            <div className={\"col\"} key={elem.title}>\n                                <label><b>{elem.title}</b></label>\n                                <label>{elem.value}</label>\n                            </div>\n                        ))\n                    }\n                </div>\n                <div className={\"tabs section row\"}>\n                    {\n                        [\"Profile\", \"Repos\"].map((elem, i) => (\n                            <div key={elem} className={\"col\" + (i === this.state.currentTab ? \" active\" : \"\")} onClick={() => this.setState({currentTab: i})}>\n                                <label>{elem}</label>\n                            </div>\n                        ))\n                    }\n                </div>\n                {\n                    this.state.currentTab === 0 ?\n                        <UserInfoDetails user={user}/> : <ReposListContainer/>\n                }\n            </div>\n        )\n    }\n}\n\nconst UserInfoDetails = ({user}) => {\n    // Prepare the user data we want to render.\n    const data = [\n        {title: \"ID\", value: user.id},\n        {title: \"Name\", value: user.name},\n        {title: \"Type\", value: user.type},\n        {title: \"Company\", value: user.company},\n        {title: \"Blog\", value: user.blog},\n        {title: \"Location\", value: user.location},\n        {title: \"Email\", value: user.email},\n        {title: \"Bio\", value: user.bio},\n        {title: \"Created at\", value: new Date(user.created_at).toDateString()},\n        {title: \"Updated at\", value: new Date(user.updated_at).toDateString()},\n    ];\n    return (\n        <div className={\"details section\"}>\n            {\n                data.map(element => (\n                    element.value ?\n                        <div className={\"row\"} key={element.title}>\n                            <label><b>{element.title}:</b> {element.value}</label>\n                        </div> : null\n                ))\n            }\n        </div>\n    );\n};\n\nexport const UserProfile = ({user, onUserClick}) => (\n    <div className={\"row section user-info\"} key={user.id} onClick={onUserClick ? () => onUserClick(user.login) : null}>\n        <div className={\"col\"}>\n            <img className={\"avatar\"} alt={\"avatar\"} src={user.avatar_url}/>\n            <h2>{user.login}</h2>\n            <a href={user.html_url} onClick={(e) => e.stopPropagation()} target={\"blank\"}>Go to profile</a>\n            {user.visited && <label>Visited {user.visited} {`time${(user.visited === 1 ? \"\" : \"s\")}`}</label>}\n        </div>\n    </div>\n);\n\nexport default UserInfoScreen;","import React from \"react\";\nimport {UserProfile} from \"./UserInfoScreen\";\nimport \"./SearchHistory.css\";\n\nconst SearchHistory = ({searches, onUserClick}) => (\n    <div className={\"searches-container\"}>\n        <h2 className={\"title\"}>Search history</h2>\n        <div className={\"searches\"}>\n            {\n                searches.length > 0 ?\n                    searches.map(user => (\n                        <UserProfile key={user.id} user={user} onUserClick={onUserClick}/>\n                    )) :\n                    <label className={\"no-history-label\"}>Your previous searches will appear here, go on and try it!</label>\n            }\n        </div>\n    </div>\n);\n\nexport default SearchHistory;","import { connect } from 'react-redux'\nimport actions from \"../actions\";\nimport {withRouter} from 'react-router'\nimport SearchHistory from \"../components/SearchHistory\";\n\nconst mapStateToProps = (state) => {\n    return {\n        searches: state.history.allIds.map(id => state.history.byId[id])\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUserClick: (username) => dispatch(actions.getUser(username))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SearchHistory));\n\n","import React, {Component} from \"react\";\nimport SearchContainer from \"../containers/SearchContainer\";\nimport \"./UserSearchScreen.css\";\nimport HistoryContainer from \"../containers/HistoryContainer\";\n\nclass UserSearchScreen extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    render() {\n        return (\n\n            <div className={\"user-screen\"}>\n                <SearchContainer/>\n                <HistoryContainer/>\n            </div>\n\n        );\n    }\n}\n\nexport default UserSearchScreen;","import { connect } from 'react-redux'\nimport {withRouter} from 'react-router'\nimport UserSearchScreen from \"../components/UserSearchScreen\";\n\nconst mapStateToProps = (state) => {\n    return {\n        loadingUser: state.ui.loadingUser,\n        showUserInfo: state.ui.showUserInfo,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(UserSearchScreen));","import React from \"react\";\nimport \"./Navbar.css\";\n\nconst Navbar = ({history}) => (\n    <nav>\n        <button onClick={() => history.push(\"/\")}><label>Github User Search</label></button>\n    </nav>\n);\n\nexport default Navbar;","import { connect } from 'react-redux'\nimport {withRouter} from 'react-router'\nimport UserInfoScreen from \"../components/UserInfoScreen\";\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(UserInfoScreen));","import React from 'react';\nimport {Route, Switch} from 'react-router';\nimport UserSearch from './containers/UserSearchContainer';\nimport NavbarScreen from \"./components/Navbar\";\nimport UserInfoContainer from \"./containers/UserInfoContainer\";\n\n/*\n    Routes of the project. The user profile is separated from the input search.\n    Navbar is always visible.\n\n    Given the size of the app, both components could be placed in the same screen\n    to give a faster experience to the user. This is just to show +1 route behaviours.\n */\nconst routes = (\n        <div className=\"main-container\">\n            <NavbarScreen/>\n            <Switch>\n                <Route exact path='/' component={UserSearch}/>\n                <Route exact path='/user' component={UserInfoContainer}/>\n            </Switch>\n        </div>\n);\n\nexport default routes;","import {GET_REPOS_REQUEST, GET_REPOS_RESPONSE, GET_USER_ERROR, GET_USER_REQUEST, GET_USER_RESPONSE} from \"../actions\";\n\n/*\n    This reducer handles all flags for UI states (loaders, error messages, etc).\n */\n\nconst initialState = {\n    loadingUser: false,\n    loadingRepos: false,\n    userNotFound: false,\n    showUserInfo: false\n};\n\nconst ui = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_USER_REQUEST: return {...state, loadingUser: true, userNotFound: false};\n        case GET_USER_RESPONSE: return {...state, loadingUser: false, showUserInfo: true};\n        // TODO distinguish between different type of errors.\n        case GET_USER_ERROR: return {...state, loadingUser: false, userNotFound: true};\n\n        case GET_REPOS_REQUEST: return {...state, loadingRepos: true};\n        case GET_REPOS_RESPONSE: return {...state, loadingRepos: false};\n        default: return state;\n\n    }\n};\n\nexport default ui;","import {GET_USER_REQUEST, GET_USER_RESPONSE} from \"../actions\";\n\n/*\n    Save the info of the user found.\n */\n\nconst initialState = {};\n\nconst user = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_USER_REQUEST: return {};\n        case GET_USER_RESPONSE: return {...action.user};\n        default: return state;\n    }\n};\n\nexport default user;","import {GET_REPOS_REQUEST, GET_REPOS_RESPONSE} from \"../actions\";\n\n/*\n    Save the repos of the selected user\n */\nconst initialState = [];\n\nconst ui = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_REPOS_REQUEST: return [];\n        case GET_REPOS_RESPONSE: return [...action.repos];\n        default: return state;\n\n    }\n};\n\nexport default ui;","import {GET_USER_RESPONSE} from \"../actions\";\n\n/*\n    Save the user's previous searches.\n */\n\n//TODO use redux-persist to persist the whole state\nconst initialState = localStorage[\"history\"] ? JSON.parse(localStorage[\"history\"]) : {\n    allIds: [],\n    byId: {}\n};\n\nconst history = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_USER_RESPONSE:\n            const newState = {\n                // Check if the username is already present in the history list.\n                allIds: state.allIds.indexOf(action.user.login) === -1 ? [action.user.login].concat(state.allIds) : state.allIds,\n                byId: {\n                    ...state.byId,\n                    [action.user.login]: {\n                        ...action.user,\n                        visited: state.byId[action.user.login] ? state.byId[action.user.login].visited + 1 : 1,\n                        visited_at: Date.now()\n                    }\n                }\n            };\n            // TODO handle pagination or limit the amount of users saved in history.\n            newState.allIds.sort((a, b) => newState.byId[a].visited_at < newState.byId[b].visited_at ? 1 : -1);\n            localStorage[\"history\"] = JSON.stringify(newState);\n            return newState;\n        default: return state;\n    }\n};\n\nexport default history;","import { combineReducers } from 'redux';\nimport ui from './ui';\nimport user from './user';\nimport repos from './repos';\nimport historyReducer from './history';\nimport { createBrowserHistory } from 'history';\nimport { connectRouter } from 'connected-react-router';\n\nconst history = createBrowserHistory();\n\n//TODO add i18n reducer for support with other languages\nconst rootReducer = combineReducers({\n    ui,\n    user,\n    repos,\n    history: historyReducer,\n    router: connectRouter(history)\n});\n\nexport default rootReducer","import axios from 'axios';\n\n\nconst httpClient = axios.create();\nhttpClient.defaults.timeout = 30000;\n\nconst _request = (url, method, data, config = {}) => {\n    return httpClient({url, method, data}).then((res) => {\n        if(res.status === 200 || res.status === 201 || res.status === 204) return res.data;\n        else throw (res.data);\n    }).catch(errorResponse => {\n        throw (errorResponse.response || {status: 500})\n    })\n};\n\nexport const get = (url) => _request(url, \"GET\");","import {GET_REPOS_REQUEST, GET_USER_REQUEST} from \"../actions\";\nimport settings from \"../settings\";\nimport actions from \"../actions\";\nimport {push} from \"connected-react-router\";\nimport {get} from \"../utils/http\";\n\n/*\n    User middleware, in charge of making the requests to github API and\n    dispatching the action to the reducers.\n */\nconst usersMiddleware = ({ dispatch, getState }) => next => action => {\n    next(action);\n    if (action.type === GET_USER_REQUEST) {\n        get(settings.githubURL + action.username).then(user => {\n            console.log(user);\n            dispatch(actions.getUserResponse(user));\n            dispatch(actions.getReposRequest(user.repos_url));\n            dispatch(push(\"/user\"))\n        }).catch(err => dispatch(actions.getUserError(err)))\n    }\n\n    if (action.type === GET_REPOS_REQUEST) {\n        //TODO manage the possibility of pagination for reports\n        get(action.reposUrl).then(repos => {\n            dispatch(actions.getReposResponse(repos));\n        }).catch(err => dispatch(actions.getReposError(err)));\n    }\n};\n\nexport default usersMiddleware;\n","import { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport {applyMiddleware, compose, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport reducer from \"./reducers\";\nimport users from \"./middlewares/users\";\n\nconst history = createBrowserHistory();\n\nconst middleware = routerMiddleware(history);\n\n// TODO persist store so users can refresh user profile\nconst store = createStore(\n    reducer,\n    undefined,\n    compose(applyMiddleware(thunk, logger, middleware, users))\n);\n\nexport default {store, history};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport Routes from './routes';\nimport store from './store';\nimport {ConnectedRouter} from \"connected-react-router\";\nimport './styles.css';\n\nReactDOM.render(\n    <Provider store={store.store}>\n        <ConnectedRouter history={store.history}>\n            {Routes}\n        </ConnectedRouter>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/arrow-up-DARK.1e818085.svg\";"],"sourceRoot":""}